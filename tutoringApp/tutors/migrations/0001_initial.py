# Generated by Django 4.2.7 on 2023-12-09 13:59

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models

import tutors.validators


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("profiles", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Subject",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=250)),
                (
                    "category",
                    models.IntegerField(
                        choices=[
                            (0, "Languages"),
                            (1, "Science"),
                            (2, "Maths"),
                            (3, "Arts and humanities"),
                            (4, "Social sciences"),
                        ]
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Service",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "number_of_hours",
                    models.PositiveIntegerField(
                        default=1,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                ("price_per_hour", models.PositiveIntegerField()),
                (
                    "session_length",
                    models.PositiveIntegerField(
                        default=60,
                        help_text="Duration of one tutoring session in minutes",
                        validators=[
                            django.core.validators.MinValueValidator(30),
                            django.core.validators.MaxValueValidator(180),
                            tutors.validators.SessionLengthValidator,
                        ],
                    ),
                ),
                (
                    "is_default",
                    models.BooleanField(
                        default=True,
                        help_text="Indicate if its a default, 1 session service that is created when adding the subject when the profile is created.",
                    ),
                ),
                (
                    "subject",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="tutors.subject"
                    ),
                ),
                (
                    "tutor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="profiles.profile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Availability",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start", models.DateTimeField()),
                (
                    "service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="tutors.service"
                    ),
                ),
            ],
        ),
    ]
